extends ../layout

block content
    mixin tableTemplateMixin()
        table.Template(border="1")
            tr.param(align="center")
                td.paramName
                    input
                td.param
                    select.paramType
                        option int
                        option string
                        option simpleArray
                        option array
                        option object
                        
                    table.Array(border="1" style="display:none")
                        tr(align="center")
                            td
                                a.AddArray(href="#" onclick='onAdd(this)') 添加
                        tr(align="center")
                            td 参数名
                            td 类型
                            td 描述
                            td 操作
                td.paramNote
                    input
                td
                    a(href="javascript:void(0)", onclick="onDeleteLine(this)") 删除

    //- mixin tableArrayTemplateMixin()
    //-     table.ArrayTemplate(border="1")
    //-         tr.paramArray(align="center")
    //-             td.paramName
    //-                 input
    //-             td.param
    //-                 select.paramType
    //-                     option int
    //-                     option string
    //-             td.paramNote
    //-                 input
    //-             td
    //-                 a(href="javascript:void(0)", onclick="onDeleteLine(this)") 删除


    mixin paramsMixin(title)
        hr
        p= title
        
        table(border="1")
            tr
                td
                    a(href="#" onclick="onAdd(this)") 添加
            tr(align="center")
                td 参数名
                td 类型
                td 描述
                td 操作


    script.
        var pugDataProto = !{JSON.stringify(proto ? proto : null)};

        var socket = io.connect();

        function addParamData(tag, param) {
            var addButtonObj = $('div.' + tag + ' > table > tbody > tr:eq(0) > td > a');
            
            for (var key in param) {
                var obj = param[key];
                var tr = onAdd(addButtonObj);
                tr.find('td.paramName > input').val(key);
                tr.find('td.paramNote > input').val(obj.desc);

                switch (obj.type) {
                case 'int':
                    tr.find('td.param > select').get(0).options[0].selected = true;
                    break;
                case 'string':
                    tr.find('td.param > select').get(0).options[1].selected = true;
                    break;
                case 'simpleArray':
                    tr.find('td.param > select').get(0).options[2].selected = true;
                    addParamSimpleArrayData(tr, obj.content);
                    break;
                case 'array':
                    tr.find('td.param > select').get(0).options[3].selected = true;
                    addParamArrayData(tr, obj.content);
                    break;
                case 'object':
                    tr.find('td.param > select').get(0).options[4].selected = true;
                    addParamObjectData(tr, obj.content);
                    break;
                }

                
                

                //- switch (typeIndex) {
                //- case 2:
                //-     tr.find('table').show();
                //-     var content = obj.content;
                //-     console.log(JSON.stringify(content));

                //-     var arrayTr = onAdd(tr.find('table.Array > tbody > tr:eq(0) > td > a.AddArray'));
                //-     console.log(arrayTr);
                //-     arrayTr.find('td.paramName > input').val('');
                //-     arrayTr.find('td.param > select').get(0).options[content.type=='int' ? 0 : 1].selected = true;
                //-     arrayTr.find('td.paramNote > input').val(content.desc);

                //-     break;
                //- case 3:
                //-     tr.find('table').show();
                //-     var content = obj.content;
                //-     for (var _k in content) {
                //-         var paramObj = content[_k];
                //-         var arrayTr = onAdd(tr.find('table.Array > tbody > tr:eq(0) > td > a.AddArray'));
                //-         arrayTr.find('td.paramName input').val(_k);
                //-         arrayTr.find('td.param > select').get(0).options[paramObj.type=='int' ? 0 : 1].selected = true;
                //-         arrayTr.find('td.paramNote > input').val(paramObj.desc);
                //-     }
                //-     break;
                //- }
            }
            
        }

        function addParamArrayData(tr, content) {
            tr.find('table').show();
            for (var _k in content) {
                var paramObj = content[_k];
                var arrayTr = onAdd(tr.find('table.Array > tbody > tr:eq(0) > td > a.AddArray'));
                arrayTr.find('td.paramName input').val(_k);
                
                arrayTr.find('td.paramNote > input').val(paramObj.desc);

                switch(paramObj.type) {
                case 'int':
                    arrayTr.find('td.param > select').get(0).options[0].selected = true;
                    break;
                case 'string':
                    arrayTr.find('td.param > select').get(0).options[1].selected = true;
                    break;
                case 'simpleArray':
                    arrayTr.find('td.param > select').get(0).options[2].selected = true;
                    addParamSimpleArrayData(arrayTr, paramObj.content);
                    break;
                case 'array':
                    arrayTr.find('td.param > select').get(0).options[3].selected = true;
                    addParamArrayData(arrayTr, paramObj.content);
                    break;
                case 'object':
                    arrayTr.find('td.param > select').get(0).options[4].selected = true;
                    addParamObjectData(arrayTr, paramObj.content);
                    break;
                }
            }
        }

        function addParamSimpleArrayData(tr, content) {
            tr.find('table').show();
            var arrayTr = onAdd(tr.find('table.Array > tbody > tr:eq(0) > td > a.AddArray'));
            arrayTr.find('td.paramName > input').val('');
            arrayTr.find('td.paramNote > input').val(content.desc);

            switch(content.type) {
            case 'int':
                arrayTr.find('td.param > select').get(0).options[0].selected = true;
                break;
            case 'string':
                arrayTr.find('td.param > select').get(0).options[1].selected = true;
                break;
            case 'simpleArray':
                arrayTr.find('td.param > select').get(0).options[2].selected = true;
                addParamSimpleArrayData(arrayTr, paramObj.content);
                break;
            case 'array':
                arrayTr.find('td.param > select').get(0).options[3].selected = true;
                addParamArrayData(arrayTr, paramObj.content);
                break;
            case 'object':
                arrayTr.find('td.param > select').get(0).options[4].selected = true;
                addParamObjectData(arrayTr, paramObj.content);
                break;    
            }
        }

        function addParamObjectData(tr, content) {
            tr.find('table').show();
            for (var _k in content) {
                var paramObj = content[_k];
                var arrayTr = onAdd(tr.find('table.Array > tbody > tr:eq(0) > td > a.AddArray'));
                arrayTr.find('td.paramName input').val(_k);
                
                arrayTr.find('td.paramNote > input').val(paramObj.desc);

                switch(paramObj.type) {
                case 'int':
                    arrayTr.find('td.param > select').get(0).options[0].selected = true;
                    break;
                case 'string':
                    arrayTr.find('td.param > select').get(0).options[1].selected = true;
                    break;
                case 'simpleArray':
                    arrayTr.find('td.param > select').get(0).options[2].selected = true;
                    addParamSimpleArrayData(arrayTr, paramObj.content);
                    break;
                case 'array':
                    arrayTr.find('td.param > select').get(0).options[3].selected = true;
                    addParamArrayData(arrayTr, paramObj.content);
                    break;
                case 'object':
                    arrayTr.find('td.param > select').get(0).options[4].selected = true;
                    addParamObjectData(arrayTr, paramObj.content);
                    break;
                }
            }   
        }

        $(function(){ 
            // do something 
            if (pugDataProto) {
                $('input.route').val(pugDataProto.route);
                $('input.note').val(pugDataProto.note);
                $('input.tag').val(pugDataProto.tag);
                $('input.protoId').val(pugDataProto.id);

                if (pugDataProto.type == 0) {
                    $("select.type").get(0).options[0].selected = true;
                } else if (pugDataProto.type == 1) {
                    $("select.type").get(0).options[1].selected = true;
                } else if (pugDataProto.type == 2) {
                    $("select.type").get(0).options[2].selected = true;
                } else if (pugDataProto.type == 4) {
                    $("select.type").get(0).options[3].selected = true;
                }

                //if (pugDataProto.c2s && pugDataProto.s2c) {
                //    $("select.type").get(0).options[0].selected = true;
                //}
                //else if (pugDataProto.c2s) {
                //    $("select.type").get(0).options[1].selected = true;
                //}
                //else if (pugDataProto.s2c) {
                //    $("select.type").get(0).options[2].selected = true;
                //}
                
                if (pugDataProto.c2s) {
                    addParamData('c2s', pugDataProto.c2s);
                }
                if (pugDataProto.s2c) {
                    addParamData('s2c', pugDataProto.s2c);
                }
            }
            else {
                
            }
        }); 

        socket.on('ErrorMsg', function(data) {
            alert(data.msg);
        });

        function onRefresh() {
            window.location.reload();
        }

        socket.on('Refresh', function() {
            //- onRefresh();
            alert('ok');
        });


        var g_paramIndexMap = {};

        function onAdd(obj) {
            var tag = $(obj).closest('div').attr('class');
            if (g_paramIndexMap[tag] == undefined) {
                g_paramIndexMap[tag] = 0;
            }

            var tb = $(obj.closest('table'));
            var firstTr = $('table.Template tr:eq(0)');
            var html = firstTr.html();
            html = '<tr class="param" align="center">' + html + '</tr>';
            
            tb.append(html);

            var tbLen = tb.find('> tbody > tr').length;

            tb.find(' > tbody > tr:eq(' + (tbLen - 1) + ') > td.param select').change(function(o) {
                var tr = $(o.currentTarget).closest('tr');
                var typeStr = tr.find('select').val();
                if (typeStr == 'array' || typeStr == 'simpleArray' || typeStr == 'object') {
                    tr.find('table').show();
                }
                else {
                    tr.find('table').hide();
                    tr.find('table tr:gt(1)').remove();
                }
            });

            g_paramIndexMap[tag]++;

            return tb.find(' > tbody > tr:eq(' + (tbLen - 1) + ')');
        }

        //- function onAddArray(obj) {
        //-     var tag = $(obj).closest('div').attr('class');
        //-     var tb = $(obj).closest('table');
        //-     var firstTr = $("table.ArrayTemplate tr:eq(0)");
        //-     var html = firstTr.html();
        //-     html = '<tr class="Array" align="center">' + html + '</tr>';

        //-     tb.append(html);

        //-     var tbLen = tb.find('> tbody > tr').length;
        //-     return tb.find(' > tbody > tr:eq(' + (tbLen - 1) + ')');
        //- }


        function makeArrayParam(tr) {
            var data = {
                type: 'array',
                desc: tr.find('> td.paramNote input').val(),
                content: {}
            };

            var len = tr.find('> td.param > table > tbody > tr.param').length;

            for (var i = 0; i < len; ++i) {

                var subTr = tr.find('> td.param > table > tbody > tr.param:eq(' + i + ')');
                var name = subTr.find('> td.paramName > input').val();
                var type = subTr.find('> td.param > select').val();
                switch(type) {
                    case 'int':
                        data.content[name] = makeIntParam(subTr);
                        break;
                    case 'string':
                        data.content[name] = makeStringParam(subTr);
                        break;
                    case 'simpleArray':
                        data.content[name] = makeSimpleArrayParam(subTr);
                        break;
                    case 'array':
                        data.content[name] = makeArrayParam(subTr);
                        break;
                    case 'object':
                        data.content[name] = makeObjectParam(subTr);
                        break;
                }
            }

            return data;
        }

        function makeSimpleArrayParam(tr) {
            var data = {
                type: 'simpleArray',
                desc: tr.find('> td.paramNote input').val(),
                content: {}
            };

            var subTr = tr.find('> td.param > table > tbody > tr.param:eq(0)');
            var type = subTr.find('> td.param > select').val();

            switch(type) {
                case 'int':
                    data.content = makeIntParam(subTr);
                    break;
                case 'string':
                    data.content = makeStringParam(subTr);
                    break;
                case 'simpleArray':
                    data.content[name] = makeSimpleArrayParam(subTr);
                    break;
                case 'array':
                    data.content[name] = makeArrayParam(subTr);
                    break;
                case 'object':
                    data.content[name] = makeObjectParam(subTr);
                    break;
            }


            return data;
        }

        function makeObjectParam(tr) {
            var data = {
                type: 'object',
                desc: tr.find('> td.paramNote input').val(),
                content: {}
            }
            var len = tr.find('> td.param > table > tbody > tr.param').length;

            for (var i = 0; i < len; ++i) {

                var subTr = tr.find('> td.param > table > tbody > tr.param:eq(' + i + ')');
                var name = subTr.find('> td.paramName > input').val();
                var type = subTr.find('> td.param > select').val();
                switch(type) {
                    case 'int':
                        data.content[name] = makeIntParam(subTr);
                        break;
                    case 'string':
                        data.content[name] = makeStringParam(subTr);
                        break;
                    case 'simpleArray':
                        data.content[name] = makeSimpleArrayParam(subTr);
                        break;
                    case 'array':
                        data.content[name] = makeArrayParam(subTr);
                        break;
                    case 'object':
                        data.content[name] = makeObjectParam(subTr);
                        break;
                }
            }

            return data;

         }

        function makeIntParam(tr) {
            var data = {
                type: 'int',
                length: 4,
                desc: tr.find('> td.paramNote input').val()
            };

            return data;
        }

        function makeStringParam(tr) {
            var data = {
                type: 'string',
                desc: tr.find('> td.paramNote input').val()
            }

            return data;
        }

        function makeParam(tag) {
            var data = {};

            var table = $('div.' + tag + ' > table');
            var trs = $('div.' + tag + ' > table > tbody > tr.param');

            for (var i = 0; i < trs.length; ++i) {
                var tr = $(trs[i]);

                var name = tr.find('> td.paramName input').val();
                var type = tr.find('> td.param select').val();

                switch(type) {
                    case 'int':
                        data[name] = makeIntParam(tr);
                        break;
                    case 'string':
                        data[name] = makeStringParam(tr);
                        break;
                    case 'array':
                        data[name] = makeArrayParam(tr);
                        break;
                    case 'simpleArray':
                        data[name] = makeSimpleArrayParam(tr);
                        break;
                    case 'object':
                        data[name] = makeObjectParam(tr);
                        break;
                }
            }

            return data;
        }

        function onDeleteLine(obj) {
            var tr = $(obj).closest("tr");
            tr.remove();
        }


        function onCommitClicked() {
            var isUpdate = ($('input.protoId').length > 0);
            console.log('isUpdate', isUpdate);
            var type = $('select.type').val();
            var data = {
                type: type,
                route: $('input.route').val(),
                note: $('input.note').val(),
                tag: $('input.tag').val()
            };
            if (isUpdate) {
                data.id = $('input.protoId').val();
            }

            if (type === 'request') {
                data.c2s = makeParam('c2s');
                data.s2c = makeParam('s2c');
            }
            else if (type === 'push') {
                data.s2c = makeParam('s2c');
            }
            else if (type === 'notify') {
                data.c2s = makeParam('c2s');
            }
            else if (type === 'system') {
                data.c2s = makeParam('c2s');
                data.s2c = makeParam('s2c');
            }
            else {
                alert("协议类型错误");
                return;
            }

            console.log(data);

            if (isUpdate) {
                socket.emit("UpdateRawProtocol", data);
            }
            else {
                socket.emit("AddRawProtocol", data);
            }
            
        }

    h1 协议编辑

    div
        p 路由：
            input.route(style="width:500") 

        if proto && proto.id
            p 协议编号：
                input.protoId(readonly="true")

        p 描述：
            input.note(style="width:500") 

        p 类型：
            select.type
                option request
                option push
                option notify
                option system


        p 分类：
            input.tag

        div.templates(style="display : none")
            +tableTemplateMixin()

            //- +tableArrayTemplateMixin()


        div.c2s
            +paramsMixin('上行参数')

        div.s2c
            +paramsMixin('下行参数')


        div
            hr
            button(onclick="onCommitClicked()") 保存
