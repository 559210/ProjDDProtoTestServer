extends ../layout

block content
    mixin tableTemplateMixin()
        table.Template(border="1")
            tr.param(align="center")
                td.paramName
                    input
                td.param
                    select.paramType
                        option int
                        option string
                        option simpleArray
                        option array
                        
                    table.Array(border="1" style="display:none")
                        tr(align="center")
                            td
                                a(href="#" onclick='onAddArray(this)') 添加
                        tr(align="center")
                            td 参数名
                            td 类型
                            td 描述
                td.paramNote
                    input

    mixin tableArrayTemplateMixin()
        table.ArrayTemplate(border="1")
            tr.paramArray(align="center")
                td.paramName
                    input
                td.param
                    select.paramType
                        option int
                        option string
                td.paramNote
                    input


    mixin paramsMixin()
        hr
        p 上行参数
        a(href="#" onclick="onAdd(this)") 添加
        table(border="1")
            tr(align="center")
                td 参数名
                td 类型
                td 描述


    script.
        var g_paramIndexMap = {};

        function onAdd(obj) {
            var tag = $(obj).closest('div').attr('class');
            if (g_paramIndexMap[tag] == undefined) {
                g_paramIndexMap[tag] = 0;
            }

            var prefix = 'div.' + tag + ' table ';
            var tb = $(prefix);
            var firstTr = $('table.Template tr:eq(0)');
            var html = firstTr.html();
            html = '<tr class="param" align="center">' + html + '</tr>';
            
            tb.append(html);

            $(prefix + 'tr.param:eq(' + (tb.length - 1) + ') td.param select').change(function(o) {
                var tr = $(o.currentTarget).closest('tr');
                var typeStr = tr.find('select').val();
                if (typeStr == 'array' || typeStr == 'simpleArray') {
                    tr.find('table').show();
                }
                else {
                    tr.find('table').hide();
                    tr.find('table tr:gt(1)').remove();
                }
            });

            g_paramIndexMap[tag]++;
        }

        function onAddArray(obj) {
            var tag = $(obj).closest('div').attr('class');
            var tableName = 'div.' + tag + ' table.Array';
            var tb = $(tableName);
            var firstTr = $("table.ArrayTemplate tr:eq(0)");
            var html = firstTr.html();
            html = '<tr class="Array" align="center">' + html + '</tr>';

            tb.append(html);
        }


        function makeArrayParam(prefix) {
            var data = {
                type: 'array',
                content: {}
            };

            var len = $(prefix + 'td.param table tr.c2sArray').length;
            for (var i = 0; i < len; ++i) {
                var newPrefix = prefix + 'td.param table tr.c2sArray:eq(' + i + ') ';
                var name = $(newPrefix + 'td.paramName input').val();
                var type = $(newPrefix + 'td.param select').val();
                switch(type) {
                    case 'int':
                        data.content[name] = makeIntParam(newPrefix);
                        break;
                    case 'string':
                        data.content[name] = makeStringParam(newPrefix);
                        break;
                }
            }

            return data;
        }

        function makeSimpleArrayParam(prefix) {
            var data = {
                type: 'simpleArray',
                content: {}
            };

            var type = $(prefix + 'td.param table tr.c2sArray td.param select').val();
            switch(type) {
                case 'int':
                    data.content = makeIntParam(prefix + 'td.param table tr.c2sArray ');
                    break;
                case 'string':
                    data.content = makeStringParam(prefix + 'td.param table tr.c2sArray ');
                    break;
            }

            return data;
        }

        function makeIntParam(prefix) {
            var data = {
                type: 'int',
                length: 4,
                desc: $(prefix + 'td.paramNote input').val()
            };

            return data;
        }

        function makeStringParam(prefix) {
            var data = {
                type: 'string',
                desc: $(prefix + 'td.paramNote input').val()
            }

            return data;
        }

        function makeRequest(tag) {
            var data = {};
            console.log('div.' + tag + ' > table');
            var table = $('div.' + tag + ' > table');
            console.log(table);
            var trs = $('div.' + tag + ' > table tr.param');

            console.log(trs);

            for (var i = 0; i < trs.length; ++i) {
                var tr = $(trs[i]);
                console.log(i, tr);
                continue;

                var prefix = 'table.c2s tr.c2s:eq(' + i + ') ';
                var name = $(prefix + 'td.paramName input').val();
                var type = $(prefix + 'td.param select').val();

                switch(type) {
                    case 'int':
                        data[name] = makeIntParam(prefix);
                        break;
                    case 'string':
                        data[name] = makeStringParam(prefix);
                        break;
                    case 'array':
                        data[name] = makeArrayParam(prefix);
                        break;
                    case 'simpleArray':
                        data[name] = makeSimpleArrayParam(prefix);
                        break;
                }
            }

            return data;
        }

        function makeAck() {
            var data = {};


            return data;
        }

        function onCommitClicked() {
            var type = $('select.type').val();
            var data = {
                route: $('input.route').val(),
                "note": $('input.note').val(),
            };

            if (type === 'request') {
                data.request = makeRequest('c2s');
                data.ack = makeAck();
            }
            else if (type === 'push') {
                data.request = makeRequest('c2s');
            }
            else if (type === 'notify') {
                data.ack = makeAck();
            }
            else {
                alert("协议类型错误");
                return;
            }

            console.log(data);
        }

    h1 协议编辑

    div
        p 路由：
            input.route() 

        p 描述：
            input.note

        p 类型：
            select.type
                option request
                option push
                option notify

        div.templates(style="display : none")
            +tableTemplateMixin()

            +tableArrayTemplateMixin()


        div.c2s
            +paramsMixin()

        div.s2c
            +paramsMixin()


        div
            hr
            button(onclick="onCommitClicked()") 保存